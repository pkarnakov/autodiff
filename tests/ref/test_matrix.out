
TestMatrix
eye + ieye:
[[2, 0, 0],[0, 2, 0],[0, 0, 2]]

-eye - ieye:
[[-2, -0, -0],[-0, -2, -0],[-0, -0, -2]]

8 / (2 + 2 * eye * 2 + 2):
[[1, 2, 2],[2, 1, 2],[2, 2, 1]]

1 - eye - 1:
[[-1, 0, 0],[0, -1, 0],[0, 0, -1]]

ieye.apply([](auto a) { return a / 2 + 0.5; }):
[[0.5, 0.5, 0.5],[0.5, 0.5, 0.5],[0.5, 0.5, 0.5]]

eye * (eye + 1):
[[2, 0, 0],[0, 2, 0],[0, 0, 2]]

eye.matmul(eye + 1):
[[2, 1, 1],[1, 2, 1],[1, 1, 2]]

eye.vstack(eye).transpose() + eye.hstack(eye):
[[2, 0, 0, 2, 0, 0],[0, 2, 0, 0, 2, 0],[0, 0, 2, 0, 0, 2]]

eye.sum():
3

eye.mean():
0.333333


TestRoll
Str(matr):
  0   1   2   3   4
  5   6   7   8   9
 10  11  12  13  14
 15  16  17  18  19
 20  21  22  23  24

Str(matr.roll(0, 1)):
  4   0   1   2   3
  9   5   6   7   8
 14  10  11  12  13
 19  15  16  17  18
 24  20  21  22  23

Str(matr.roll(1, 0)):
 20  21  22  23  24
  0   1   2   3   4
  5   6   7   8   9
 10  11  12  13  14
 15  16  17  18  19

Str(matr.roll(1, 1)):
 24  20  21  22  23
  4   0   1   2   3
  9   5   6   7   8
 14  10  11  12  13
 19  15  16  17  18

Str(matr.roll(0, -1)):
  1   2   3   4   0
  6   7   8   9   5
 11  12  13  14  10
 16  17  18  19  15
 21  22  23  24  20

Str(matr.roll(-1, 0)):
  5   6   7   8   9
 10  11  12  13  14
 15  16  17  18  19
 20  21  22  23  24
  0   1   2   3   4

Str(matr.roll(-1, -1)):
  6   7   8   9   5
 11  12  13  14  10
 16  17  18  19  15
 21  22  23  24  20
  1   2   3   4   0


TestMultigrid
Str(matr):
   0    1    2    3    4    5
   6    7    8    9   10   11
  12   13   14   15   16   17
  18   19   20   21   22   23
  24   25   26   27   28   29
  30   31   32   33   34   35

Str(matr.restrict()):
 3.5  5.5  7.5
15.5 17.5 19.5
27.5 29.5 31.5

Str(matr.restrict().interpolate()):
   0    1    2    3    4    5
   6    7    8    9   10   11
  12   13   14   15   16   17
  18   19   20   21   22   23
  24   25   26   27   28   29
  30   31   32   33   34   35

Str(M::iota(1, 3).interpolate()):
-0.25 0.25 0.75 1.25 1.75 2.25
-0.25 0.25 0.75 1.25 1.75 2.25

Str(matr.restrict_adjoint()):
   0    0 0.25 0.25  0.5  0.5 0.75 0.75    1    1 1.25 1.25
   0    0 0.25 0.25  0.5  0.5 0.75 0.75    1    1 1.25 1.25
 1.5  1.5 1.75 1.75    2    2 2.25 2.25  2.5  2.5 2.75 2.75
 1.5  1.5 1.75 1.75    2    2 2.25 2.25  2.5  2.5 2.75 2.75
   3    3 3.25 3.25  3.5  3.5 3.75 3.75    4    4 4.25 4.25
   3    3 3.25 3.25  3.5  3.5 3.75 3.75    4    4 4.25 4.25
 4.5  4.5 4.75 4.75    5    5 5.25 5.25  5.5  5.5 5.75 5.75
 4.5  4.5 4.75 4.75    5    5 5.25 5.25  5.5  5.5 5.75 5.75
   6    6 6.25 6.25  6.5  6.5 6.75 6.75    7    7 7.25 7.25
   6    6 6.25 6.25  6.5  6.5 6.75 6.75    7    7 7.25 7.25
 7.5  7.5 7.75 7.75    8    8 8.25 8.25  8.5  8.5 8.75 8.75
 7.5  7.5 7.75 7.75    8    8 8.25 8.25  8.5  8.5 8.75 8.75

Str(M::iota(8).interpolate_adjoint()):
25.3125 28.75 33.8125 55.125
92.1875 78.75 82.6875 115.375
132.688 110.25 114.188 155.875
263.812 214.25 219.312 293.625

dot(u, ufine.restrict()): 5100
dot(ufine, u.restrict_adjoint()): 5100
dot(ufine, u.interpolate()): 20664
dot(u, ufine.interpolate_adjoint()): 20664

TestConv
Str(u):
  0   1   2   3
  4   5   6   7
  8   9  10  11
 12  13  14  15

rms(u.conv(1, 0, 0, 0, 0) - u): 0
rms(u.conv(0, 1, 0, 0, 0) - u.roll(1, 0)): 0
rms(u.conv(0, 0, 1, 0, 0) - u.roll(-1, 0)): 0
rms(u.conv(0, 0, 0, 1, 0) - u.roll(0, 1)): 0
rms(u.conv(0, 0, 0, 0, 1) - u.roll(0, -1)): 0
Str(u.conv(-4, 1, 1, 1, 1)):
 20  16  16  12
  4   0   0  -4
  4   0   0  -4
-12 -16 -16 -20

